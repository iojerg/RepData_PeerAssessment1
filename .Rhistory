setwd("C:/Users/Login/Documents/GitHub/RepData_PeerAssessment1")
require(dplyr)
require(lattice)
url<-c("https://d396qusza40orc.cloudfront.net/repdata%2Fdata%2Factivity.zip")
file<-"Activity.zip"
if (!file.exists(file)) {
download.file(url, destfile = file)
unzip(file)
}
data <-read.csv("activity.csv", header = TRUE)
by.date <- aggregate(steps ~ date, data = data, sum)
histogram <- hist(by.date$steps,
breaks = 5,
col = c("blue",5),
main = "Histogram of steps by day",
xlab = "Number of steps")
smean <- round(mean(by.date$steps),2)
print(paste("data mean:",round(smean,2),sep = " "))
smedian <- round(median(by.date$steps),2)
print(paste("data meadian:",round(smedian,2),sep = " "))
## 2 Activity pattern
by.interval <- aggregate(steps ~ interval, data = data, mean)
names(by.interval) <- c("interval", "steps.mean")
daily.act.pat <- plot(by.interval$interval, by.interval$steps,
type = 'l',
main = "Daily Activity Pattern",
xlab = "5- minute interval",
ylab = "Daily average number of steps",
)
axis(1, xaxp = c(0, 2500, 20))
max_avg <- by.interval[by.interval$steps==max(by.interval$steps),]
## Imputing missing values
##3 Report Na's
summary(data)
na <- is.na(data$steps)
table(na)
na.percentage <- sum(na)/length(na)
print(paste("Percentage of Na's: ",round(na.percentage*100,2),"%", sep = ""))
##4 Replacing Na's by average by interval
data.i <- data
for(i in 1:dim(data.i)[1])  ##This function replace Na's by the average number of step by interval
{
if(is.na(data.i$steps[i]))
{
data.i$steps[i] <- round(as.numeric(by.interval[by.interval$interval == data.i$interval[i],][2]),0)
}
}
##5 Histogram for the imputing data set
by.date.i <- aggregate(steps ~ date, data = data.i, sum)
histogram <- hist(by.date.i$steps,
breaks = 5,
col = c("blue",5),
main = "Histogram of steps by day",
xlab = "Number of steps")
smean.i <- round(mean(by.date.i$steps),2)
print(paste("data.i mean:",round(smean.i,2),sep = " "))
smedian.i <- round(median(by.date.i$steps),2)
print(paste("data.i meadian:",round(smedian.i,2),sep = " "))
mean.diff <- smean - smean.i
print(paste("Mean diff:",round(mean.diff,2),sep = " "))
median.diff <- smedian - smedian.i
print(paste("Median diff:",round(median.diff,2),sep = " "))
##On the original data set, there are some days with no record of steps, so when it is grouped by date to calculate the total number of steps
## by day, the number of rows is 53 instead of 61 (total number of days), so the mean is computed across 53 records
## When the data is imputing with missing values, the number of days is 61, so the mean and median are being computing across of it
## as I have replaced missing values by average steps by interval, the number of days to be the mean and median computed is 61, and days
##that the daily number of steps was Na (missing values), now in the imputing data set have positive values. It does the mean and media
## to change
##6 Are there differences in activity patterns between weekdays and weekends?
##6.1 Create a new variable factor with 2 levels: weekday and weekend
data.i$day <- as.factor(weekdays(as.Date(data.i$date)))
data.i$day.type <- (data.i$day == "Saturday" | data.i$day == "Sunday")
for (i in 1:dim(data.i)[1])
{
if (data.i$day.type[i]){
data.i$day.type[i] <- "Weekend"
}
else {
data.i$day.type[i] <-  "Weekday"
}
}
data.i$day.type <- as.factor(data.i$day.type)
##6.2 Make a panel plot conaining a time series plot
d.weekend <- aggregate(steps ~ interval, data = data.i[data.i$day.type=="Weekend",],mean)
d.weekend$day.type <- "Weekend"
d.weekday <- aggregate(steps ~ interval, data = data.i[data.i$day.type=="Weekday",],mean)
d.weekday$day.type <- "Weekday"
subset <- rbind(d.weekend,d.weekday)
## Weekend and weekday combined on the same chart
p<-xyplot(steps ~  interval,
data = subset,
groups = day.type,
type = "l",
auto.key = list(lines = T, points = F))
## Weekend and weekday on different charts
q <- xyplot(steps ~ interval | day.type,
data = subset,
layout = c(1,2),
type = "l",
groups = day.type)
library(knitr)
knit2html("doc.Rmd")
browseURL("doc.html")
install.packages("xtable")
